openapi: 3.0.0
info:
  title: API de Gerenciamento de Eventos
  description: Documentação da API usando Swagger
  version: 1.0.0
servers:
- url: http://localhost:3333
  description: Servidor local
tags:
- name: Usuários
  description: Operações de gerenciamento de usuários
- name: Eventos
  description: Operações relacionadas a eventos
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Descrição do erro"
    UserResponse:
      type: object
      properties:
        userId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        firstName:
          type: string
          example: "Carlos"
        lastName:
          type: string
          example: "Araújo dos Santos"
        email:
          type: string
          format: email
          example: "carlos@example.com"
        phoneNumber:
          type: string
          example: "33333333333"
    UserRequest:
      type: object
      properties:
        firstName:
          type: string
          example: "Carlos"
        lastName:
          type: string
          example: "Araújo dos Santos"
        email:
          type: string
          format: email
          example: "carlos@example.com"
        phoneNumber:
          type: string
          example: "33333333333"
        password:
          type: string
          example: "{Password@123"
    EventResponse:
      type: object
      properties:
        eventId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: "Feira de Tecnologia"
        description:
          type: string
          example: "Uma feira anual para entusiastas e profissionais da tecnologia."
        linkEvent:
          type: string
          example: "https://www.evento-tecnologia.com"
        address:
          type: object
          properties:
            street:
              type: string
              example: "Rua da Tecnologia"
            number:
              type: string
              example: "123"
            neighborhood:
              type: string
              example: "Centro"
            complement:
              type: string
              example: "Próximo à praça central"
        accessibilityLevel:
          type: string
          enum:
          - SEM_ACESSIBILIDADE
          - ACESSIBILIDADE_BASICA
          - ACESSIBILIDADE_AUDITIVA
          - ACESSIBILIDADE_VISUAL
          - ACESSIBILIDADE_COMPLETA
          - NAO_INFORMADA
          example: "ACESSIBILIDADE_BASICA"
        startDateTime:
          type: string
          example: "2023-11-25T09:00:00Z"
        endDateTime:
          type: string
          example: "2023-11-25T18:00:00Z"
        createdAt:
          type: string
          example: "2023-10-20T12:30:45Z"

paths:
  /usuarios:
    post:
      summary: "Criar um novo usuário"
      tags:
      - "Usuários"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: "Usuário criado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}:
    get:
      summary: "Recuperar um usuário específico pelo ID"
      tags:
      - "Usuários"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do usuário a ser recuperado (formato UUID v4)."
        schema:
          type: string
          example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      responses:
        '200':
          description: "Usuário recuperado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."

    delete:
      summary: "Deletar um usuário específico pelo ID."
      tags:
      - "Usuários"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do usuário a ser deletado (formato UUID v4)."
        schema:
          type: string
          example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      security:
      - bearerAuth: []
      responses:
        '204':
          description: "Usuário deletado com sucesso."
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '403':
          description: "Acesso negado. O usuário não tem permissão para deletar este
            registro."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                access_denied:
                  summary: "Acesso negado"
                  value:
                    message: "Acesso negado. O ID do usuário logado não corresponde ao ID solicitado
                      para a operação."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."

    put:
      summary: "Atualizar as informações de um usuário específico pelo ID."
      tags:
      - "Usuários"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do usuário a ser atualizado (formato UUID v4)."
        schema:
          type: string
          example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          description: "Usuário atualizado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '403':
          description: "Acesso negado. O usuário não tem permissão para atualizar este
            registro."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                access_denied:
                  summary: "Acesso negado"
                  value:
                    message: "Acesso negado. O ID do usuário logado não corresponde ao ID solicitado
                      para a operação."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."

  /usuarios/{id}/permissao:
    put:
      summary: "Atualiza a permissão de um usuário"
      tags:
      - "Usuários"
      description: Esta rota permite que um administrador atualize a permissão de um
        usuário existente.
      parameters:
      - name: id
        in: path
        required: true
        description: ID do usuário cuja permissão será atualizada.
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newRole:
                  type: string
                  enum: [ Admin, User ]
                  description: O novo papel que será atribuído ao usuário.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Permissão do usuário atualizada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Permissão do usuário atualizada com sucesso, João agora é Admin"
        '400':
          description: Erro de validação ou entrada inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_role:
                  summary: "Permissão informada não é valida"
                  value:
                    message: "Papel inválido. Somente 'Admin' ou 'User ' são aceitos."
        '403':
          description: Permissão insuficiente para realizar a operação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                access_denied:
                  summary: "Permissão insuficiente"
                  value:
                    message: "Permissão insuficiente. Requerido: Admin, atual: User"
        '404':
          description: Usuário ou papel não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                role_not_found:
                  summary: "A permissão(role) fornecida não foi encontrada"
                  value:
                    message: "Role não encontrada"
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."
        '409':
          description: Conflito ao tentar atualizar a permissão para um papel já existente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "O usuário João já possui a permissão Admin"
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                error_update_role:
                  summary: "Erro interno na atualização da permissão do usuário"
                  value:
                    message: "Erro interno ao realizar operação"
                error_get_role:
                  summary: "Erro durante a busca de role"
                  value:
                    message: "Erro ao buscar a role"

  /usuarios/recuperacao/enviar-codigo:
    post:
      summary: "Envia código para recuperação de senha"
      tags:
      - "Usuários"
      description: Esta rota permite que o usuário receba um código no seu email, para
        que possa ser utilizado em outra rota como validação antes da
        redefinição de senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "carlos@example.com"
      responses:
        '200':
          description: Código foi enviado para o email informado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Código de recuperação enviado para o seu e-mail"
        '400':
          description: Erro de validação ou entrada inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_email:
                  summary: "Email fornecido não tem formato valido"
                  value:
                    message: "Email deve ser um email válido"
                invalid_type_email:
                  summary: "Email fornecido com um tipo invalido"
                  value:
                    message: "Email deve ser uma string"
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Nenhum usuário encontrado com este email"
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                error_send_code:
                  summary: "Erro interno ao enviar código de validação para o email do usuário"
                  value:
                    message: "Erro interno ao realizar operação"
                error_get_user:
                  summary: "Erro interno durante a busca do usuário"
                  value:
                    message: "Erro interno ao buscar usuário"

  /usuarios/recuperacao/atualizar-senha:
    post:
      summary: "Atualiza senha do usuário"
      tags:
      - "Usuários"
      description: Esta rota permite que o usuário atualize sua senha, usando como validação um código recebido por email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "carlos@example.com"
                newPassword:
                  type: string
                  example: "p3@Paulowww"
                recoveryCode:
                  type: string
                  example: "3oPs99"
      responses:
        '200':
          description: A senha do usuário foi devidamente atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Senha atualizada com sucesso"
        '400':
          description: Erro de validação ou entrada inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_email:
                  summary: "Email fornecido não tem formato valido"
                  value:
                    message: "Email deve ser um email válido"
                invalid_type_email:
                  summary: "Email fornecido com um tipo invalido"
                  value:
                    message: "Email deve ser uma string"
                empty_password:
                  summary: "Fornecer a senha vazia ou apenas com espaços"
                  value:
                    message: "Senha não pode estar vazia"
                weak_password:
                  summary: "Fornecer uma senha fraca"
                  value:
                    message: "Senha deve ter pelo menos 8 caracteres, incluir uma letra maiúscula, um número e um caractere especial (!@#$&*)"
                invalid_recovery_code:
                  summary: "Fornecer um código de validação invalido"
                  value:
                    message: "Código de recuperação inválido" 
                expired-recovery_code:
                  summary: "Fornecer um código de validação expirado"
                  value:
                    message: "Código de recuperação expirado" 
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Nenhum usuário encontrado com este email"
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                error_send_code:
                  summary: "Erro interno ao atualizar senha do usuário"
                  value:
                    message: "Erro interno ao realizar operação"
                error_get_user:
                  summary: "Erro interno durante a busca do usuário"
                  value:
                    message: "Erro interno ao buscar usuário"
                error_validate_code:
                  summary: "Erro interno durante a validação do código"
                  value:
                    message: "Erro ao validar o código de recuperação" 

  /usuarios/login:
    post:
      summary: "Realizar login do usuário"
      tags:
      - "Usuários"
      description: Esta rota permite que o usuário envie seus dados de login para entrar na plataforma
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "carlos@example.com"
                passwordProvided:
                  type: string
                  example: "p3@Paulowww"
      responses:
        '200':
          description: A senha do usuário foi devidamente atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 
                  message:
                    type: string
                    example: "Login bem-sucedido"
        '400':
          description: Erro de validação ou entrada inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_email:
                  summary: "Email fornecido não tem formato valido"
                  value:
                    message: "Email deve ser um email válido"
                invalid_type_email:
                  summary: "Email fornecido com um tipo invalido"
                  value:
                    message: "Email deve ser uma string"
        '401':
          description: Credenciais não condizem com as armazenadas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_credentials:
                  summary: "Credenciais inválidas"
                  value:
                    message: "Credenciais inválidas"
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Nenhum usuário encontrado com este email"
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                error_login:
                  summary: "Erro interno ao realizar o login do usuário"
                  value:
                    message: "Erro ao realizar login"

  /eventos:
    get:
      summary: "Lista todos os eventos ordenados por título em ordem alfabética."
      tags:
      - Eventos
      responses:
        '200':
          description: "Lista de eventos encontrada com sucesso"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
        '404':
          description: "Nenhum evento encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_events:
                  summary: "Nenhum evento encontrado"
                  value:
                    message: "Nenhum evento encontrado"
        '500':
          description: "Erro interno do servidor ao buscar eventos"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: "Erro interno"
                  value:
                    message: "Erro na consulta ao banco de dados"

  /eventos/{id}:
    get:
      summary: "Recuperar um evento específico pelo ID"
      tags:
      - "Eventos"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do evento a ser recuperado (formato UUID v4)."
        schema:
          type: string
          example: "0457333a-bd1a-45da-86bc-4e80b72ae9ac"
      responses:
        '200':
          description: "Evento recuperado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '404':
          description: "Evento não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Evento não encontrado"
                  value:
                    message: "Evento não encontrado."
