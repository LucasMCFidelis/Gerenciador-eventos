openapi: 3.0.0
info:
  title: API de Gerenciamento de Eventos
  description: Documentação da API usando Swagger
  version: 1.0.0
servers:
- url: http://localhost:3333
  description: Servidor local
tags:
- name: Usuários
  description: Operações de gerenciamento de usuários
- name: Eventos
  description: Operações relacionadas a eventos
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Descrição do erro"
    UserResponse:
      type: object
      properties:
        userId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        firstName:
          type: string
          example: "Carlos"
        lastName:
          type: string
          example: "Araújo dos Santos"
        email:
          type: string
          format: email
          example: "carlos@example.com"
        phoneNumber:
          type: string
          example: "33333333333"
    UserRequest:
      type: object
      properties:
        firstName:
          type: string
          example: "Carlos"
        lastName:
          type: string
          example: "Araújo dos Santos"
        email:
          type: string
          format: email
          example: "carlos@example.com"
        phoneNumber:
          type: string
          example: "33333333333"
        password:
          type: string
          example: "{Password@123"
paths:
  /usuarios:
    post:
      summary: "Criar um novo usuário"
      tags:
      - "Usuários"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: "Usuário criado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}:
    get:
      summary: "Recuperar um usuário específico pelo ID"
      tags:
      - "Usuários"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do usuário a ser recuperado (formato UUID v4)."
        schema:
          type: string
          example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      responses:
        '200':
          description: "Usuário recuperado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."

    delete:
      summary: "Deletar um usuário específico pelo ID"
      tags:
      - "Usuários"
      parameters:
      - in: path
        name: id
        required: true
        description: "ID do usuário a ser deletado (formato UUID v4)."
        schema:
          type: string
          example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      responses:
        '204':
          description: "Usuário deletado com sucesso."
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."

    put:
      summary: "Atualizar um usuário específico pelo ID"
      tags:
      - "Usuários"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do usuário a ser atualizado (formato UUID v4)."
          schema:
            type: string
            example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: "Usuário atualizado com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuário atualizado com sucesso"
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_email:
                  summary: "Email inválido"
                  value:
                    message: "Este e-mail já está cadastrado."
                invalid_id_empty:
                  summary: "ID vazio"
                  value:
                    message: "O ID não pode ser vazio."
                invalid_id_format:
                  summary: "ID em formato inválido"
                  value:
                    message: "O ID deve estar no formato de UUID v4."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."
        '500':
          description: "Erro interno do servidor."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: "Erro interno"
                  value:
                    message: "Erro ao atualizar o usuário."

  /usuarios/{id}/permissao:
    put:
      summary: "Atualizar a permissão de um usuário específico pelo ID"
      tags:
      - "Usuários"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do usuário a ter sua permissão atualizada (formato UUID v4)."
          schema:
            type: string
            example: "2aca17c6-b372-443c-8eff-70fe8d85100e"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminId:
                  type: string
                  description: "ID do administrador realizando a atualização (formato UUID v4)."
                  example: "123e4567-e89b-12d3-a456-426614174000"
                newRole:
                  type: string
                  description: "Nova permissão a ser atribuída ao usuário. Deve ser uma permissão válida no sistema."
                  example: "Admin"
      responses:
        '200':
          description: "Permissão do usuário atualizada com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Permissão do usuário atualizada com sucesso, Carlos agora é Admin."
        '400':
          description: "Requisição inválida."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_role:
                  summary: "Permissão inválida"
                  value:
                    message: "A permissão especificada é inválida."
                invalid_admin_id:
                  summary: "ID do administrador inválido"
                  value:
                    message: "O ID do administrador é inválido ou o administrador não possui permissão."
        '403':
          description: "Permissão insuficiente para realizar esta ação."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                insufficient_permission:
                  summary: "Permissão insuficiente"
                  value:
                    message: "Permissão insuficiente. Requerido: Admin, atual: User."
        '404':
          description: "Usuário não encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  summary: "Usuário não encontrado"
                  value:
                    message: "Usuário não encontrado."
        '409':
          description: "Conflito. O usuário já possui a permissão especificada."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                role_already_set:
                  summary: "Permissão já atribuída"
                  value:
                    message: "O usuário Carlos já possui a permissão User."
        '500':
          description: "Erro interno do servidor."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: "Erro interno"
                  value:
                    message: "Erro ao atualizar a permissão do usuário."
